package social.multiplication.domain.service;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import org.junit.Before;
import org.junit.Test;

public class RandomGeneratorServiceImplTest {
	
	private RandomGeneratorService randomGeneratorService;
	
	@Before
	public void setUp() {
		randomGeneratorService = new RandomGeneratorServiceImpl();
	}
	
	@Test
	public void generateRandomFactorIsBetweenExpectedLimits() {
		// when 
		// a good sample of randomly generated factors
		// generated by using IntStream.range as a loop for how many times you will 
		// call the randomGeneratorService.generateRandomFactor and get a descent size sampling
		// of data to test
		List<Integer> randomFactors = IntStream.range(0, 1000).map(i -> 
		        randomGeneratorService.generateRandomFactor())
				.boxed().collect(Collectors.toList());
		
		// then
		// all of the generated values should be within the expected range
		// start 11 inclusive and end 100 exclusive
		assertThat(randomFactors).containsOnlyElementsOf( IntStream.range(11, 100)
				.boxed().collect(Collectors.toList()) );
	}

}
